{"version":3,"sources":["auth/hooks/useCheckAuth.js","store/_types/auth.types.js","store/_types/favorite.types.js","store/_types/gifs.types.js","store/index.jsx","store/_actions/favorite.actions.js","store/_actions/auth.actions.js","store/_actions/gifs.actions.js","ui/NavbarApp.jsx","components/AddCategory.jsx","ui/Like.jsx","ui/LikeNot.jsx","components/GifGrigItem.jsx","components/helpers/getGifs.jsx","components/hooks/useFetchGifs.jsx","components/GifGrid.jsx","GifExpertApp.jsx","favorite/FavoriteItem.jsx","favorite/FavoriteScreem.jsx","auth/LoginScreem.jsx","routers/PrivateRouter.jsx","routers/PublicRouter.jsx","routers/DashboardRouters.jsx","routers/AppRouter.jsx","index.js"],"names":["useCheckAuth","JSON","parse","localStorage","getItem","authTypes","favoriteTypes","gifsTypes","Store","React","createContext","initialState","session","isAuth","name","token","categories","favorites","globalReducer","state","action","type","payload","find","fav","id","StoreProvider","props","useReducer","value","dispatch","Provider","children","favoriteActions","favorite","authActions","user","setItem","stringify","removeItem","gifsActions","category","NavbarApp","useContext","login","className","to","NavDropdown","title","Divider","Item","onClick","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","AddCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","onChange","target","placeholder","Like","width","height","viewBox","fill","xmlns","d","LikeNot","fillRule","GifGrigItem","imageUrl","isFavorite","favoriteButton","Button","variant","document","getElementById","play","Card","style","Img","src","Body","Title","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","images","downsized_medium","useFetchGifs","loading","setstate","useEffect","then","GifGrid","key","GifExpertApp","FavoriteItem","FavoriteScreem","LoginScreem","history","lastPath","replace","PrivateRouter","Component","component","rest","location","pathname","PublicRouter","DashboardRouters","exact","path","GifsExpertApp","AppRouter","ReactDOM","render"],"mappings":"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","file":"static/js/main.33355297.chunk.js","sourcesContent":[" \r\nfunction useCheckAuth() {\t\r\n\t \r\n\tconst lsuser = JSON.parse(localStorage.getItem('session_app'));\r\n\t \r\n\treturn lsuser;\r\n}\r\n\r\nexport default useCheckAuth;","\r\n\r\nexport const authTypes = {\r\n    SET_SESSION: 'SET_SESSION',\r\n    REMOVE_SESSION: 'REMOVE_SESSION',\r\n}","\r\nexport const favoriteTypes = {\r\n    ADD_FAVORITE : 'ADD_FAVORITE'\r\n};","\r\nexport const gifsTypes = {\r\n    GIFS_LIST: 'GIFS_LIST',\r\n    ADD_CATEGORY: 'ADD_CATEGORY'\r\n}","import React, { useReducer } from 'react';\r\nimport { authTypes, favoriteTypes, gifsTypes } from './_types';\r\n\r\nexport const Store = React.createContext();\r\n\r\nconst initialState = {\r\n    session: {\r\n\t\tisAuth: false,\r\n\t\tname: '',\r\n\t\ttoken: ''\r\n\t},\r\n\tcategories: ['Dragon Ball'],\r\n    favorites: []\r\n};\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n \r\n\tswitch (action.type) {\r\n\r\n\tcase gifsTypes.ADD_CATEGORY:\r\n\t\treturn { ...state, categories: [ action.payload, ...state.categories ] }\r\n\tcase gifsTypes.GIFS_LIST :\r\n\t\treturn { ...state, categories: action.payload }\r\n\tcase authTypes.SET_SESSION:\r\n\t\treturn { ...state, session: action.payload };\r\n\r\n\tcase authTypes.REMOVE_SESSION:\r\n\t\treturn { ...state, session: {\r\n\t\t\tisAuth: false,\r\n\t\t\tname: '',\r\n\t\t\ttoken: ''\r\n\t\t} }\r\n\t\r\n\tcase favoriteTypes.ADD_FAVORITE:\r\n\t\tif(state.favorites.find(fav => fav.id === action.payload.id)) {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\treturn { ...state, favorites: [ action.payload , ...state.favorites] }\t\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport function StoreProvider(props) {\r\n\tconst [state, dispatch] = useReducer(globalReducer, initialState);\r\n\tconst value = { state, dispatch };\r\n\treturn <Store.Provider value={value}>{props.children}</Store.Provider>;\r\n}","\r\nimport { favoriteTypes } from '../_types';\r\n\r\nconst AddFavorite = ( favorite, dispatch ) => {\r\n\r\n    //agregamos al API\r\n    \r\n\r\n    dispatch({\r\n        type: favoriteTypes.ADD_FAVORITE,\r\n        payload: favorite\r\n    })\r\n};\r\n\r\n\r\nexport const favoriteActions = {\r\n    AddFavorite\r\n}","import { authTypes } from \"../_types\";\r\n\r\nconst login = ( user, dispatch ) => {\r\n\r\n    localStorage.setItem('session_app', JSON.stringify(user));\r\n\r\n    dispatch({\r\n        type: authTypes.SET_SESSION,\r\n        payload : user\r\n    })\r\n\r\n};\r\n\r\nconst logout = (dispatch) => {\r\n    localStorage.removeItem('session_app');\r\n    dispatch({\r\n        type: authTypes.REMOVE_SESSION\r\n    })\r\n}\r\n\r\nexport const authActions = {\r\n    login,\r\n    logout\r\n};","\r\nimport { gifsTypes } from '../_types';\r\n\r\nconst addCategory = (category, dispatch) =>{\r\n\r\n    dispatch({\r\n        type: gifsTypes.ADD_CATEGORY,\r\n        payload: category\r\n    })\r\n} \r\n \r\nexport const gifsActions = {\r\n    addCategory\r\n}","import React, { useContext } from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport useCheckAuth from '../auth/hooks/useCheckAuth';\r\nimport { Store } from '../store';\r\nimport { authActions } from '../store/_actions';\r\n \r\n \r\nconst NavbarApp = () => {\r\n\r\n    const { dispatch } = useContext(Store);\r\n    const user = useCheckAuth();\r\n\r\n\r\n    const handleLogout = () => {\r\n        authActions.logout( dispatch );\r\n    }\r\n\r\n    const login = user === null ? (<li className=\"nav-item\"> <Link className=\"nav-link \" to=\"/login\">Login</Link></li>) : \r\n    (\r\n        <NavDropdown title={user.name} id=\"collasible-nav-dropdown\">\r\n            <Link className=\"dropdown-item\" to=\"/favorite\">Favoritos</Link>\r\n             \r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item onClick={handleLogout}>Cerrar Session</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Gifs</Link>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                   <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/favorite\">Favoritos</Link></li> \r\n                   \r\n                    { login }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n}\r\n \r\nexport default NavbarApp\r\n","import React, { useState, useContext } from 'react'\r\n \r\nimport { gifsActions } from '../store/_actions';\r\nimport { Store } from '../store';\r\n\r\nconst AddCategory = () => {\r\n\r\n    const { dispatch } = useContext(Store);\r\n    const [ inputValue, setInputValue ] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue( e.target.value );\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){      \r\n            gifsActions.addCategory( inputValue, dispatch );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>                   \r\n            <input \r\n                onChange={ handleInputChange }\r\n                placeholder=\"Ejemplo: Goku\"\r\n                type=\"text\" \r\n                value={ inputValue }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n \r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n \r\nconst Like = () => {\r\n    return (\r\n        <span className=\"h3\">\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-suit-heart-fill\" fill=\"#ed4956\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1z\"/>\r\n            </svg> \r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport default Like\r\n","import React from 'react'\r\n \r\nconst LikeNot = () => {\r\n    return (\r\n        <span className=\"h3\">\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-suit-heart\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" d=\"M8 6.236l.894-1.789c.222-.443.607-1.08 1.152-1.595C10.582 2.345 11.224 2 12 2c1.676 0 3 1.326 3 2.92 0 1.211-.554 2.066-1.868 3.37-.337.334-.721.695-1.146 1.093C10.878 10.423 9.5 11.717 8 13.447c-1.5-1.73-2.878-3.024-3.986-4.064-.425-.398-.81-.76-1.146-1.093C1.554 6.986 1 6.131 1 4.92 1 3.326 2.324 2 4 2c.776 0 1.418.345 1.954.852.545.515.93 1.152 1.152 1.595L8 6.236zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.55 7.55 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z\"/>\r\n            </svg> \r\n        </span>\r\n    )\r\n}\r\n\r\n \r\n\r\nexport default LikeNot\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { favoriteActions } from '../store/_actions';\r\nimport Like from '../ui/Like';\r\nimport LikeNot from '../ui/LikeNot';\r\nimport { Store } from '../store';\r\n\r\n\r\nconst GifGrigItem = (  { id, title, imageUrl, isFavorite } ) => {\r\n    \r\n    const { dispatch } = useContext(Store)\r\n\r\n    const handleAddFavorite = ( favorite ) => {\r\n\r\n        //add soni button\r\n        \r\n        const sonidoClick = document.getElementById('sonidoClick');       \r\n        sonidoClick.play();\r\n        favoriteActions.AddFavorite( favorite, dispatch )\r\n         \r\n    };\r\n\r\n    const favoriteButton = (!isFavorite) ? \r\n        (\r\n            <Button variant=\"\"  onClick={ ()=> handleAddFavorite( { id, imageUrl, title} ) }>\r\n                <LikeNot /> \r\n            </Button>\r\n        )\r\n        :\r\n        (\r\n            <Button variant=\"\"  >\r\n                <Like /> \r\n            </Button>\r\n        )\r\n\r\n    return (\r\n        <Card style={{ width: '18rem' }} className=\"card animate__animated animate__bounce\">\r\n            <Card.Img variant=\"top\" src={ imageUrl } />\r\n            <div className=\"h2 m-0\">\r\n                {\r\n                    favoriteButton\r\n                }  \r\n            </div>\r\n            <Card.Body>\r\n                             \r\n            <Card.Title>{ title }</Card.Title>           \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nGifGrigItem.propTypes = {\r\n    isFavorite: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default GifGrigItem;\r\n\r\n","\r\nconst getGifs = async( category ) => {\r\n\r\n    const apiKey = 'i9qX1owLK7HETD9NqNV6O4eLoKS48Dsl';\r\n\r\n    //uso de category en la url encodeURI()\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${ apiKey }&q=${ encodeURI(category) }&limit=10`;\r\n    //const url = 'http://samirpazo-001-site1.dtempurl.com/GifExpert';\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(gif => (\r\n        {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            imageUrl: gif.images?.downsized_medium.url\r\n        }\r\n    ));\r\n \r\n    return gifs;\r\n}\r\n \r\nexport default getGifs","\r\nimport { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = ( category ) => {\r\n     const [ state, setstate ] = useState({\r\n         data: [],\r\n         loading: true\r\n     })\r\n\r\n     useEffect(() => {\r\n           getGifs( category )\r\n            .then( gifs => {\r\n                setstate({\r\n                    data: gifs,\r\n                    loading: false\r\n                })\r\n            });\r\n     }, [category])\r\n\r\n     return state\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React, { useContext } from 'react'\r\nimport GifGrigItem from './GifGrigItem'\r\nimport useFetchGifs from './hooks/useFetchGifs'\r\nimport { Store } from '../store';\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    const { data:gifs, loading} = useFetchGifs( category );\r\n\r\n    const { state:{favorites} } = useContext(Store)\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>  \r\n            {\r\n                loading && 'cargando...'\r\n            }  \r\n            <div className=\"card-grid\">\r\n            {\r\n                gifs.map(( gif ) => (\r\n                    <GifGrigItem \r\n                        key={gif.id} \r\n                        {...gif} \r\n                        isFavorite={((!!favorites.find(fav => fav.id === gif.id)) && true)}/>\r\n                 ))\r\n            }           \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState, useContext } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nimport { Store } from './store';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const { state:{categories} } = useContext(Store);\r\n \r\n    return (\r\n        <div className=\"pt-5\">\r\n             \r\n            <AddCategory />\r\n            <hr/>\r\n            <div>\r\n                {\r\n                    categories.map( ( category ) => (\r\n                        <GifGrid \r\n                            key={ category } \r\n                            category={ category } />\r\n                    ) )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n \r\nconst FavoriteItem = ({ id, title, imageUrl }) => {\r\n    //const { dispatch } = useContext(Store)\r\n\r\n     \r\n\r\n    return (\r\n        <Card style={{ width: '18rem' }} className=\"card animate__animated animate__bounce\">\r\n            <Card.Img variant=\"top\" src={ imageUrl } />\r\n            <Card.Body>\r\n            <Card.Title>{ title }</Card.Title>\r\n             \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FavoriteItem\r\n","import React, { useContext } from 'react';\r\nimport FavoriteItem from './FavoriteItem';\r\n\r\nimport { Store } from '../store';\r\nimport { Link } from 'react-router-dom';\r\n \r\nconst FavoriteScreem = () => {\r\n\r\n    const { state:{favorites} } = useContext(Store)\r\n \r\n    return (\r\n        <div>\r\n            <h2>Favorites</h2>\r\n            <div className=\"card-grid\">\r\n            {\r\n                (favorites.length === 0) ? (\r\n                    <div className=\"text-center\">\r\n                        <div className=\"alert alert-info\">Aun no tienes favoritos </div>\r\n                        <Link to=\"/\"  >ver Gifs</Link>\r\n                    </div>\r\n                ) \r\n                : \r\n                (\r\n                    favorites.map(fav => (\r\n                        <FavoriteItem \r\n                            key={fav.id} \r\n                            {...fav} />\r\n                    ))\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n\r\nexport default FavoriteScreem\r\n","import React, { useContext } from 'react';\r\n \r\nimport { Store } from '../store/index';\r\nimport { authActions } from '../store/_actions/auth.actions';\r\n\r\nconst LoginScreem = ({ history }) => {\r\n\r\n    const { dispatch } = useContext(Store);\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        const lastPath = localStorage.getItem(\"lastPath\") || \"/\";\r\n\r\n        const user = {\r\n            isAuth: true,\r\n            name: 'Samir Pazo Torres',\r\n            token: ''\r\n        }\r\n\r\n        authActions.login( user, dispatch)\r\n\r\n        history.replace( lastPath );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Ingresa con tu cuenta</h2>\r\n            <form onSubmit={ handleSubmit }>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ingresa tu correo\" \r\n                        type=\"text\"\r\n                        />\r\n                   \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ingresa tu clave\" \r\n                        type=\"password\"\r\n                        />\r\n                </div>\r\n                <button className=\"btn btn-primary block\">Ingresar</button>\r\n                 \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreem\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRouter = ({\r\n    isAuth,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem(\"lastPath\", rest.location.pathname );\r\n    \r\n    return (\r\n        <Route \r\n            {...rest} \r\n            component = { props => (\r\n                (isAuth)\r\n                ? <Component {...props} />\r\n                :\r\n                <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRouter\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRouter = ({\r\n    isAuth,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest} \r\n            component = { props => (\r\n                (isAuth)\r\n                ? \r\n                <Redirect to=\"/\" />\r\n                :\r\n                <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRouter","import React from 'react';\r\nimport NavbarApp from '../ui/NavbarApp';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport GifsExpertApp from '../GifExpertApp';\r\nimport FavoriteScreem from '../favorite/FavoriteScreem';\r\nimport LoginScreem from '../auth/LoginScreem';\r\nimport PrivateRouter from './PrivateRouter';\r\nimport PublicRouter from './PublicRouter';\r\nimport useCheckAuth from '../auth/hooks/useCheckAuth';\r\n\r\nconst DashboardRouters = () => {\r\n\r\n    const user = useCheckAuth() || { isAuth: false };\r\n    const { isAuth } = user;\r\n \r\n    return (\r\n        <>\r\n            <NavbarApp />\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ GifsExpertApp } />\r\n                    <PrivateRouter exact path=\"/favorite\" component={ FavoriteScreem } isAuth={ isAuth } />\r\n                    <PublicRouter exact path=\"/login\" component={ LoginScreem } isAuth={ isAuth } />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nDashboardRouters.propTypes = {\r\n\r\n}\r\n\r\nexport default DashboardRouters\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport DashboardRouters from './DashboardRouters'\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    \r\n                    <Route path=\"/\" component={ DashboardRouters } />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n\r\n\r\n//<Route exact path=\"/login\" component={ LoginScreem } /> *PRIMERO CUANDO EL LOGIN NO NECESITA NAVBAR*","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\nimport { StoreProvider } from './store/index';\n \nimport './index.scss';\n\nReactDOM.render(\n   <StoreProvider>\n    <AppRouter />\n  </StoreProvider>,\n  document.getElementById('root')\n); "],"sourceRoot":""}